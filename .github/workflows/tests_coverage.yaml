name: Unittests and Code Coverage

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  codecov:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - name: Create pipenv-environment
        uses: dschep/install-pipenv-action@v1
      - name: Install Dependencies
        run: pipenv install --dev --pre
      - name: Run Tests and Generate Coverate Report
        run: |
          pipenv run coverage run --branch -m unittest discover
          pipenv run coverage xml
      - name: Uplad coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.xml
          flags: unittests
# name: Tests

# on:
#   push:
#     branches: [master]
#   pull_request:
#     branches: [master]

# jobs:
#   codecov:
#     runs-on: ubuntu-latest
#     strategy:
#       max-parallel: 4
#       matrix:
#         python-version: [3.9]

#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up Python ${{matrix.python-version}}
#         uses: actions/setup-python@v2
#         with:
#           python-version: ${{matrix.python-version}}
#       - name: Install Dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install pipenv
#           pipenv install --dev --pre
#       # - name: Create pipenv-environment
#       #   uses: dschep/install-pipenv-action@v1
#       # - name: Install Dependencies
#       #   run: pipenv install --dev --pre
#       - name: Print Dicrectory
#         run: ls -la
#       - name: Run Tests and Generate Coverate Report
#         run: |
#           pipenv run coverage run -m unittest discover
#           pipenv run coverage xml
#       - name: Uplad coverage to Codecov
#         uses: codecov/codecov-action@v1
#         with:
#           token: ${{secrets.CODECOV_TOKEN}}
#           file: ./coverage.xml
#           flags: unittests
